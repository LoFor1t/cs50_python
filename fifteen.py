import random

maximum = 0
array_field = []
change = 0


def init():
    global maximum
    global array_field
    global change
    flag_change = True
    list_of_numbers_for_paste = []
    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–æ–≤ –ø–æ–ª—è
    while type(maximum) == str or maximum <= 0:
        maximum = input('–í–≤–µ–¥–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –ø–æ–ª—è –æ–¥–Ω–æ–π —Ü–∏—Ñ—Ä–æ–π (–ø—Ä–∏ –≤–≤–æ–¥–µ 4 - –ø–æ–ª–µ = 4x4) - ')
        try:
            maximum = int(maximum)
        except ValueError:
            continue
    # –°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –≤—Å—Ç–∞–≤–ª–µ–Ω–∏—è –≤ –Ω–µ–≥–æ —è—á–µ–µ–∫
    array_field = [[-1] * maximum for i in range(maximum)]
    # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–ª—è —è—á–µ–π–∫–∞–º–∏
    for number in range(maximum * maximum):
        list_of_numbers_for_paste.append(number + 1)
    for y in range(maximum):
        for x in range(maximum):
            array_field[y][x] = random.choice(list_of_numbers_for_paste)
            list_of_numbers_for_paste.remove(array_field[y][x])
    # –ó–∞–º–µ–Ω–∞ –æ–¥–Ω–æ–π –∏–∑ —è—á–µ–µ–∫ –Ω–∞ –ø—É—Å—Ç—É—é
    while flag_change:
        draw()
        change = int(input('–ò–∑ –≤—ã–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –ø–æ–ª—è –≤—ã—à–µ, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–∏—Å–≤–æ–µ–Ω–æ —ç—Ç–æ–π —è—á–µ–π–∫–µ, –∫–æ—Ç–æ—Ä—É—é, –≤—ã —Ö–æ—Ç–µ–ª–∏ '
                           '–±—ã "–≤—ã—Ç–∞—â–∏—Ç—å": '))
        for y in range(maximum):
            for x in range(maximum):
                if array_field[y][x] == change:
                    array_field[y][x], change = '_', array_field[y][x]
                    flag_change = False
        if flag_change:
            print('–¢–∞–∫–æ–≥–æ —á–∏—Å–ª–∞ –Ω–µ—Ç –≤ –≤–∞—à–µ–π –∏–≥—Ä–µ, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏—é —Å–Ω–æ–≤–∞.')
    draw()


def draw():
    for y in range(maximum):
        for x in range(maximum):
            print(str(array_field[y][x]), end=' ')
        print()


def move():
    global change
    y_number = None
    x_number = None
    y_space = None
    x_space = None
    changing_number = int(input('–£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –Ω–∞ –ø–ª–∏—Ç–∫–µ, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å: '))
    for y in range(maximum):
        for x in range(maximum):
            if array_field[y][x] == changing_number:
                y_number = y
                x_number = x
            elif array_field[y][x] == '_':
                y_space = y
                x_space = x
    # –ï—Å–ª–∏ –Ω–æ–º–µ—Ä –≤—ã—à–µ —á–µ–º –ø—É—Å—Ç–∞—è —è—á–µ–π–∫–∞
    if y_number == y_space - 1 and x_number == x_space:
        array_field[y_number][x_number], array_field[y_space][x_space] = array_field[y_space][x_space], \
                                                                         array_field[y_number][x_number]
        draw()
    # –ï—Å–ª–∏ –Ω–æ–º–µ—Ä –ø—Ä–∞–≤–µ–µ —á–µ–º –ø—É—Å—Ç–∞—è —è—á–µ–π–∫–∞
    elif y_number == y_space and x_number == x_space + 1:
        array_field[y_number][x_number], array_field[y_space][x_space] = array_field[y_space][x_space], \
                                                                         array_field[y_number][x_number]
        draw()
    # –ï—Å–ª–∏ –Ω–æ–º–µ—Ä –Ω–∏–∂–µ —á–µ–º –ø—É—Å—Ç–∞—è —è—á–µ–π–∫–∞
    elif y_number == y_space + 1 and x_number == x_space:
        array_field[y_number][x_number], array_field[y_space][x_space] = array_field[y_space][x_space], \
                                                                         array_field[y_number][x_number]
        draw()
    # –ï—Å–ª–∏ –Ω–æ–º–µ—Ä –ª–µ–≤–µ–µ —á–µ–º –ø—É—Å—Ç–∞—è —è—á–µ–π–∫–∞
    elif y_number == y_space and x_number == x_space - 1:
        array_field[y_number][x_number], array_field[y_space][x_space] = array_field[y_space][x_space], \
                                                                         array_field[y_number][x_number]
        draw()
    else:
        print('–í—ã –≤–≤–µ–ª–∏ –Ω–µ–≤–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –≤–Ω–æ–≤—å.')
        move()


def won():
    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
    flag_won = True
    y_space = None
    x_space = None
    # –ó–∞–º–µ–Ω–∞ –ø—É—Å—Ç–æ–π —è—á–µ–π–∫–∏ –Ω–∞ —è—á–µ–π–∫—É –∫–æ—Ç–æ—Ä–∞—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–∞ –µ—ë –º–µ—Å—Ç–µ
    for y in range(maximum):
        for x in range(maximum):
            if array_field[y][x] == '_':
                array_field[y][x] = change
                y_space = y
                x_space = x
    # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –∏ –Ω—ã–Ω–µ—à–Ω–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
    for y in range(maximum):
        for x in range(maximum):
            # –ï—Å–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –±–æ–ª—å—à–µ —á–µ–º –Ω—ã–Ω–µ—à–Ω–µ–µ - —Ç—ã –Ω–µ –≤—ã–∏–≥—Ä–∞–ª
            if y > 0 and x == 0 and array_field[y - 1][maximum - 1] > array_field[y][x]:
                flag_won = False
            elif array_field[y][x - 1] > array_field[y][x] and x > 0:
                flag_won = False
    array_field[y_space][x_space] = '_'
    if flag_won:
        return True
    else:
        return False


if __name__ == '__main__':
    init()
    while True:
        move()
        if won():
            print('–¢—ã –≤—ã–∏–≥—Ä–∞–ª!ü•≥')
            break
